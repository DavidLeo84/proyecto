package beans;

import java.util.Random;

public class Logica {

    int matrizLogica[][];
    int x1,y1,x2,y2,min,max,up,down,left,right;

    public int randomOpcion(){
        min = 1;
        max = 5;
        Random random = new Random();
        int resul = random.nextInt(max - min) + min;

        return resul;
    }
    public void usarTablero(){
        int pos;
         int aux[][] = crearTablero();
        for (int i = 0; i < crearTablero().length; i++) {
            for (int j = 0; j < crearTablero().length; j++) {
                pos = aux[i][j];
                System.out.println("la posicion de la matriz es "+ pos);

            }

        }
    }

    public int[][] crearTablero() {

        int op = randomOpcion();


        int aux[][] = new int[15][15];
        switch (op) {
            case 1: aux[][] = {{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
                    {1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 1},
                    {1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1},
                    {1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 1},
                    {1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1},
                    {1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 1},
                    {1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1},
                    {1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1},
                    {1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1},
                    {1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1},
                    {1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1},
                    {1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1},
                    {1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1},
                    {1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1},
                    {2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2},

            };
                return aux;
                break;

            case 2: aux[][] = { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2 },

            };
                return aux;
                break;

            case 3: aux[][] = { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2 },

            };
                return aux;
                break;

            case 4:  aux[][] = { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 2 },

            };
                return aux;
                break;

            case 5: aux[][] = { { 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1 },
                    { 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1 },
                    { 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2 },

            };
                return aux;
                break;

            default:
                break;

        }



    }


}
